Обоснование:
Предположим что мы не используем Singleton в классе MorphAnalyzer.
Тогда на каждом запросе нужно создать экземпляр класса pymorphy2.MorphAnalyzer,
который в свою очередь весит по 50-100мб(из-за словарей и моделей теггинга),
соответственно при определенной нагрузке мы получаем переполнение оперативной памяти.
Собственно тоже самое можно сказать про чтение файла с константами проекта(класс Config),
незачем хранить в памяти несколько копий файла с константами.
(Если есть сомнения в работоспособности реализации:
в консоль выводится адрес в памяти, можно убедиться что он одинаковый везде)
